- hosts: all
  any_errors_fatal: true
  tasks:

  # Start 2 duplicate jobs, verify they run concurrently.

  - name: create semaphore file and sleep for 5 seconds.
    shell: |
      exec 2>/dev/null;
      bash -c '
        echo im_alive $$ > /tmp/flurp
        sleep 60;
      ';
      rm -f /tmp/flurp;
      echo alldone
    async: 1000
    poll: 0
    register: job1

  # This guy prints the first field from the semaphore file and kills the PID
  # from the second field, cancelling the slow sleep above, so the busy-poll
  # below compltes quickly.
  - name: verify semaphore file exists while this job exists.
    shell: |
      [ -f /tmp/flurp ] && {
        read im_alive pid < /tmp/flurp
        echo $im_alive
        kill $pid &>/dev/null
      }
    async: 1000
    poll: 0
    register: job2

  - name: (job1) busy-poll up to 100000 times
    async_status:
      jid: "{{job1.ansible_job_id}}"
    register: result1
    until: result1.finished
    retries: 100000
    delay: 0

  - name: (job2) busy-poll up to 100000 times
    async_status:
      jid: "{{job2.ansible_job_id}}"
    register: result2
    until: result2.finished
    retries: 100000
    delay: 0

  - assert:
      that:
        - result1.rc == 0
        - result2.rc == 0
        - result2.stdout == 'im_alive'
